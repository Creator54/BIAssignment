/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bi.assignment;

import java.io.File;
import java.io.FileReader;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.imageio.ImageIO;
import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.json.simple.JSONObject;
import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.Screenshot;
import ru.yandex.qatools.ashot.shooting.ShootingStrategies;
import org.json.simple.parser.*;
import org.openqa.selenium.chrome.ChromeOptions;

// Below is the code outline which we will use for this project
/*
* This Java source file was generated by the Gradle 'init' task.
*/

public class App {

    public static ChromeDriver createDriver() {
        // TODO Create a new chrome Driver and Return the same
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--headless", "--window-size=1920,1200");
        String driverLocation = "D:\\DEV_2\\chromedriver_win32\\chromedriver.exe";
        System.setProperty("webdriver.chrome.driver", driverLocation);
        ChromeDriver driver = new ChromeDriver(options);
        return driver;
    }

    public static void printQKartLoadingtime(ChromeDriver driver, String URL) throws InterruptedException {
        // TODO Navigate to home page of QKart and verify the time taken for the page to load
        String homePageUrl = URL;
        long start = (System.currentTimeMillis() / 1000) % 60;
        driver.get(homePageUrl);
        long end = (System.currentTimeMillis() / 1000) % 60;
        long duration = (end - start);
        System.out.println("Time taken to load QKart Page: " + duration + " seconds");
    }

    public static void captureFullPageScreenshot(ChromeDriver driver, String screenShotSaveLocation) {
        // TODO: Capture the full page screenshot
        // Save the file with a unique name
        // Print the path of the file
        try {
            // "screenshots/";
            String path = screenShotSaveLocation;
            File theDir = new File(path);
            if (!theDir.exists()) {
                theDir.mkdirs();
            }
            String timestamp = String.valueOf(java.time.LocalDateTime.now()).replace(":", "-");
            String fileName = String.format("screenshotTime%s", timestamp);
            String picPath = path + "fullPage" + fileName + ".png";
            new AShot()
                    .shootingStrategy(ShootingStrategies.viewportPasting(100))
                    .takeScreenshot(driver);
            Screenshot screenshot = new AShot().shootingStrategy(ShootingStrategies.viewportPasting(1000))
                    .takeScreenshot(driver);
            ImageIO.write(screenshot.getImage(), "PNG", new File(picPath));
            Path pathUrl = Paths.get(picPath);
            System.out.println("Full Page screenshot captured and saved at:");
            System.out.printf("%-25s : %s%n", "path", pathUrl);
            System.out.printf("%-25s : %s%n", "path.toAbsolutePath()", pathUrl.toAbsolutePath());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void GetProductImageandURL(ChromeDriver driver, String productName) throws InterruptedException {
        // TODO: Given the product name, print the price of the project and the url of the image
        // p[contains(@class,'css-yg30e6') and translate('STYLE',
        // 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')]
        System.out.println(productName);
        try {
            WebElement productNameEle = driver
                    .findElement(
                            By.xpath("//p[contains(@class,'css-yg30e6') and contains(text(), \"" + productName
                                    + "\")]"));
            WebElement productImgEle = productNameEle.findElement(By.xpath("//parent::div//parent::div/img"));
            WebElement productPrice = productNameEle.findElement(By.xpath("//following-sibling::p"));
            System.out.println("Product Info");
            System.out.printf("Name: %s \n", productNameEle.getText().trim());
            System.out.printf("Img URL: %s \n", productImgEle.getAttribute("src").trim());
            System.out.printf("Prcie: %s \n", productPrice.getText().trim());
        } catch (Exception e) {
            System.out.println("No such product found, try to buy from some other places :( ");
            System.out.println(e.getMessage());
        }
    }

    public static void searchForProduct(ChromeDriver driver, String product) {
        WebDriverWait wait = new WebDriverWait(driver, 30);
        try {
            // Clear the contents of the search box and Enter the product name in the search box
            WebElement searchBox = driver.findElement(By.xpath("//input[@name='search'][1]"));
            searchBox.clear();
            searchBox.sendKeys(product);
            wait.until(ExpectedConditions.textToBePresentInElementLocated(By.className("css-yg30e6"), product));
        } catch (TimeoutException te) {
            wait.until(ExpectedConditions
                    .presenceOfElementLocated(By.xpath("//h4[contains(text(),'No products found')]")));
        } catch (Exception e) {
            System.out.println("Error while searching for a product: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        ChromeDriver driver = createDriver();
        String input = String.join(" ", args);
        JSONParser parser = new JSONParser();
        try {
            String configPath = "D:\\Github_repos\\BIAssignment\\config.json";
            Object obj = parser.parse(new FileReader(configPath));
            JSONObject jo = (JSONObject) obj;
            String URL = (String) jo.get("QKART_URL");
            String screenshotSaveLocation = (String) jo.get("ScreenshotSaveLocation");
            printQKartLoadingtime(driver, URL);
            captureFullPageScreenshot(driver, screenshotSaveLocation);
            searchForProduct(driver, input);
            GetProductImageandURL(driver, input);
        } catch (Exception e) {
            System.out.println("Exception occured");
            System.out.println(e.getMessage());
        } finally {
            driver.quit();
        }
    }
}